@page "/schedule"
@using ScheduleOptimizer.Logic;


<PageTitle>Schedule</PageTitle>

<h1>Schedule</h1>

<button class="btn btn-primary" @onclick="SomeFunction">GenerateSchedule</button>
<button class="btn btn-primary" @onclick="ClearFunction">Clear</button>

<tr style="background-color: #fff">
    <td style="padding: 8px; border: 1px solid #111;">Day</td>
    <td style="padding: 8px; border: 1px solid #111;">Time</td>
    <td style="padding: 8px; border: 1px solid #111;">Course Name</td>
    <td style="padding: 8px; border: 1px solid #111;">Room Number</td>
    <td style="padding: 8px; border: 1px solid #111;">Professor</td>
</tr>

@foreach (var (item, index) in finalSchedule.Select((value, idx) => (value, idx)))
{
    var rowColor = index % 2 == 0 ? "#888" : "#f9f9f9";
     <!-- Alternating colors -->
    <tr style="background-color: @rowColor">
        <td style="padding: 8px; border: 1px solid #111;">@item.Key.Item1.DayOfWeek</td>
        <td style="padding: 8px; border: 1px solid #111;">@item.Key.Item1.Hour:@item.Key.Item1.Minute</td>
        <td style="padding: 8px; border: 1px solid #111;">@item.Key.Item2.CourseName</td>
        <td style="padding: 8px; border: 1px solid #111;">@item.Value.room.RoomNumber</td>
        <td style="padding: 8px; border: 1px solid #111;">@item.Value.professor.Name</td>
    </tr>
}

@code {
    public Dictionary<(DateTime, ScheduleOptimizer.Logic.Course), ScheduledCourse> finalSchedule = new();
    public int day = 0;

    public void SomeFunction()
    {
        //InitializeData.BeginData();
        Scheduling schedule = new(Persistence.Semester.Spring, 5, InitializeData.ListOfCourses);

        finalSchedule = schedule.GenerateSchedule(InitializeData.ListOfCourses[0].CoursesWithRooms(),
        InitializeData.ListOfProfessors[0].CalculateCourseProfessor());
    }

    public void ClearFunction()
    {
        //InitializeData.ClearData();
        finalSchedule.Clear();
    }
}

@page "/professor"
@page "/use-InitializeData"
@using ScheduleOptimizer.Logic;
@using System.Collections;
@using System.Collections.Generic; @*In here say using at dataholder or singleton thing. See program.cs for more*@


<PageTitle>Professor</PageTitle>
<h1>Professor</h1>

<p>This is our Professor page. It will eventually be able to add new profesors and a few other fun things as well!'</p>

<input type="text" @bind="profName" placeholder="Professor's Name" />

<button style="background-color: #008000" class="btn btn-primary" @onclick="AddProf">Add Professor</button>


<button style="background-color: #FF0000" class="btn btn-primary" @onclick="RemoveProfessor">Remove Professor</button>


@* <button style="background-color: #ff0000" class="btn btn-primary" @onclick="ClearProfessors">Clear List of Professors</button> *@



<p>Total number of Professors: @Logic.InitializeData.ListOfProfessors.Count</p>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Professor Name</th>
            @foreach (var course in InitializeData.ListOfCourses)
            {
                <th>@course.CourseName</th>
            }
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < InitializeData.ListOfProfessors.Count(); i++)
        {
            <tr>
                <td>@InitializeData.ListOfProfessors[i].Name</td>
                @foreach (CourseAndPreference stuff in InitializeData.ListOfProfessors[i].CoursePreferences)
                {
                    <td>@stuff.preference</td>
                }
            </tr>
        }
    </tbody>
</table>


@code {

    private string profName;
    private string feedback;
    private static int minimumNameLength = 3;
    private int length = Logic.InitializeData.ListOfProfessors.Count;


    private void ClearProfessors()
    {
        Logic.InitializeData.ClearData();
    }


    private void AddProf()
    {

        //Add the professor here using the string profName
        if (profName.Length >= minimumNameLength)// protects against empty adding or adding a space bar as a name.
        {
            Logic.Professor prof = new Logic.Professor(profName);
            profName = string.Empty;
            InitializeData.ListOfProfessors.Add(prof);
            InitializeData.SaveData();
        }
        // prof.AddAProfessorToInitData(prof);

        feedback = ($"You added {Logic.InitializeData.ListOfProfessors[Logic.InitializeData.ListOfProfessors.Count - 1].Name} to the list of professors!");

    }
    private void RemoveProfessor()
    {

        for (int i = 0; i < Logic.InitializeData.ListOfProfessors.Count; i++)
        {
            if (Logic.InitializeData.ListOfProfessors[i].Name == profName)
            {
                Logic.InitializeData.ListOfProfessors.Remove(Logic.InitializeData.ListOfProfessors[i]);
                InitializeData.SaveData();
                profName = string.Empty;
                break;
            }
        }
    }
}


@page "/room"
@using ScheduleOptimizer.Logic
<PageTitle>Room Management</PageTitle>

<h1>Room Management</h1>

<p>This is the Room Management page. You can add, remove, clear, or reinitialize rooms here!</p>


<div style="margin-bottom: 20px;">
    <button class="btn btn-primary" @onclick="AddRoom">Add Room</button>
    <button style="background-color: #ff8800" class="btn btn-primary" @onclick="RemoveRoom">Remove Room</button>
    <button style="background-color: #ff0000" class="btn btn-primary" @onclick="ClearRooms">Clear Rooms</button>
    <button style="background-color: #00f800" class="btn btn-primary" @onclick="ReinitRooms"> Print Rooms</button>
</div>

<p>Total number of Rooms: @Logic.InitializeData.ListOfRooms.Count</p>


<table style="width: 100%; border-collapse: collapse; margin-top: 20px;">
    <thead>
        <tr style="background-color: #333; color: #fff;">
            <th style="padding: 8px; border: 1px solid #111;">Room Number</th>
            <th style="padding: 8px; border: 1px solid #111;">Room Type</th>
            <th style="padding: 8px; border: 1px solid #111;">Availability</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < InitializeData.ListOfRooms.Count(); i++)
        {
            if (i % 2 == 1)
            {
                <tr style="background-color: #fff">
                    <td style="padding: 8px; border: 1px solid #111;">@InitializeData.ListOfRooms[i].RoomNumber</td>
                    <td style="padding: 8px; border: 1px solid #111;">@InitializeData.ListOfRooms[i].RoomType</td>
                    <td style="padding: 8px; border: 1px solid #111;">@(InitializeData.ListOfRooms[i].IsAvailable ? "Available" : "Occupied")</td>
                </tr>
            }
            else
            {
                <tr style="background-color: #ccc">
                    <td style="padding: 8px; border: 1px solid #111;">@InitializeData.ListOfRooms[i].RoomNumber</td>
                    <td style="padding: 8px; border: 1px solid #111;">@InitializeData.ListOfRooms[i].RoomType</td>
                    <td style="padding: 8px; border: 1px solid #111;">@(InitializeData.ListOfRooms[i].IsAvailable ? "Available" : "Occupied")</td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private void AddRoom()
    {
        var newRoomNumber = InitializeData.ListOfRooms.Count + 130; // Example new room number logic
        var newRoomType = RoomType.Normal; // Default to Normal type (adjust as needed)

        // Add a new room to the ListOfRooms
        InitializeData.ListOfRooms.Add(new Room(newRoomNumber, newRoomType));
    }

    private void RemoveRoom()
    {
        if (InitializeData.ListOfRooms.Count > 0)
        {
            // Remove the last room from the list
            InitializeData.ListOfRooms.RemoveAt(InitializeData.ListOfRooms.Count - 1);
        }
    }

    private void ClearRooms()
    {
        InitializeData.ClearData();
    }

    private void printRooms()
    {
        InitializeData.BeginData();
    }
}
